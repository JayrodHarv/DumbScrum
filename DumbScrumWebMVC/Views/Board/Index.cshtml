@model DumbScrumWebMVC.Models.BoardVM
@using DataObjects
@using DumbScrumWebMVC.Models

@{
    ViewBag.Title = "Scrum Board";


}

<div class="container-fluid p-0 d-flex h-100">
    @Html.Partial("_ProjectPartial")
    <div class="container-fluid">
        <div class="row">
            <h2>Scrum Board</h2>
            <div class="d-flex mb-4">
                @using (Html.BeginForm("Index", "Board", FormMethod.Post, new { id = "feature-form" })) {

                    @Html.HiddenFor(model => model.ProjectID)

                    <label class="align-self-center" style="padding-right: 5px;">Sprint: </label>
                    <select name="sprintFilter" class="form-select" onchange="submit()">
                        @foreach(SprintVM sprint in Model.Sprints) {
                            <option value="@sprint.SprintID" @(Model.CurrentSprint.SprintID == sprint.SprintID ? "selected" : "")>@sprint.Name</option>
                        }
                    </select>
                }
            </div>
        </div>
        <div class="row column-gap-4">
            <div class="col overflow-auto">
                <span class="badge bg-danger mb-2 p-2">To Do</span>
                <div>
                    @foreach (DataObjects.TaskVM t in Model.ToDoTasks) {
                        @Html.Partial("_TaskItemPartial", new TaskItemVM() { Task = t, ProjectID = Model.ProjectID })
                    }
                </div>
            </div>
            <div class="col overflow-auto">
                <span class="badge mb-2 p-2" style="background-color: orange">In Progress</span>
                <div>
                    @foreach (DataObjects.TaskVM t in Model.InProgressTasks) {
                        @Html.Partial("_TaskItemPartial", new TaskItemVM() { Task = t, ProjectID = Model.ProjectID })
                    }
                </div>
            </div>
            <div class="col overflow-auto">
                <span class="badge bg-warning mb-2 p-2">Needs Reviewed</span>
                <div>
                    @foreach (DataObjects.TaskVM t in Model.NeedsReviewedTasks) {
                        @Html.Partial("_TaskItemPartial", new TaskItemVM() { Task = t, ProjectID = Model.ProjectID })
                    }
                </div>
            </div>
            <div class="col overflow-auto">
                <span class="badge bg-success mb-2 p-2">Completed</span>
                <div>
                    @foreach (DataObjects.TaskVM t in Model.CompleteTasks) {
                        @Html.Partial("_TaskItemPartial", new TaskItemVM() { Task = t, ProjectID = Model.ProjectID })
                    }
                </div>
            </div>
        </div>
    </div>
</div>
